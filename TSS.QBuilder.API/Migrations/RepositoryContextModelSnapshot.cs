// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TSS.QBuilder.Repository;

#nullable disable

namespace TSS.QBuilder.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TSS.QBuilder.Entities.Models.ControlType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ControlName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ControlType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5c9f52a-f7bd-4c65-a144-01cd4caa3426"),
                            ControlName = "Control Type 1"
                        },
                        new
                        {
                            Id = new Guid("f74b3df6-a04d-4351-8d5b-2d757688d7d0"),
                            ControlName = "Control Type 2"
                        },
                        new
                        {
                            Id = new Guid("32530f63-9047-4c4d-81c3-1e1a0ed78bca"),
                            ControlName = "Control Type 3"
                        });
                });

            modelBuilder.Entity("TSS.QBuilder.Entities.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ControlTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionSubText")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ControlTypeId");

                    b.HasIndex("QuestionSetId");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d41217c6-2aae-402b-99d2-83ba7ee13f10"),
                            ControlTypeId = new Guid("f5c9f52a-f7bd-4c65-a144-01cd4caa3426"),
                            QuestionSetId = new Guid("2a14846f-46b3-4f00-8d3d-dd77a9bf6a08"),
                            QuestionSubText = "This is the first question",
                            QuestionText = "Question 1"
                        },
                        new
                        {
                            Id = new Guid("6ddd1742-8b20-47e9-8c79-fd686e9ab2c9"),
                            ControlTypeId = new Guid("f74b3df6-a04d-4351-8d5b-2d757688d7d0"),
                            QuestionSetId = new Guid("71a30165-923f-43d2-bcc4-ceb2e5d0aeac"),
                            QuestionSubText = "This is the second question",
                            QuestionText = "Question 2"
                        },
                        new
                        {
                            Id = new Guid("7f430543-7f81-450d-aee0-660ad9e10e9f"),
                            ControlTypeId = new Guid("32530f63-9047-4c4d-81c3-1e1a0ed78bca"),
                            QuestionSetId = new Guid("c1123783-5004-4fe7-af36-2a9ffd183641"),
                            QuestionSubText = "This is the third question",
                            QuestionText = "Question 3"
                        });
                });

            modelBuilder.Entity("TSS.QBuilder.Entities.Models.QuestionSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("QuestionSet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a14846f-46b3-4f00-8d3d-dd77a9bf6a08"),
                            Description = "This is the first question set",
                            Name = "Question Set 1"
                        },
                        new
                        {
                            Id = new Guid("71a30165-923f-43d2-bcc4-ceb2e5d0aeac"),
                            Description = "This is the second question set",
                            Name = "Question Set 2"
                        },
                        new
                        {
                            Id = new Guid("c1123783-5004-4fe7-af36-2a9ffd183641"),
                            Description = "This is the third question set",
                            Name = "Question Set 3"
                        });
                });

            modelBuilder.Entity("TSS.QBuilder.Entities.Models.Question", b =>
                {
                    b.HasOne("TSS.QBuilder.Entities.Models.ControlType", "ControlType")
                        .WithMany()
                        .HasForeignKey("ControlTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TSS.QBuilder.Entities.Models.QuestionSet", "QuestionSet")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControlType");

                    b.Navigation("QuestionSet");
                });

            modelBuilder.Entity("TSS.QBuilder.Entities.Models.QuestionSet", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
